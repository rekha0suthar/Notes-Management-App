[{"/home/rekha/workspace/notes-management-app/src/index.js":"1","/home/rekha/workspace/notes-management-app/src/reportWebVitals.js":"2","/home/rekha/workspace/notes-management-app/src/App.js":"3","/home/rekha/workspace/notes-management-app/src/AllNote.js":"4","/home/rekha/workspace/notes-management-app/src/NoteForm.js":"5","/home/rekha/workspace/notes-management-app/src/reducer/noteReducer.js":"6","/home/rekha/workspace/notes-management-app/src/Note.js":"7","/home/rekha/workspace/notes-management-app/src/EditComponent.js":"8"},{"size":667,"mtime":1609419535252,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609408420007,"results":"11","hashOfConfig":"10"},{"size":453,"mtime":1609520337736,"results":"12","hashOfConfig":"10"},{"size":2591,"mtime":1609520263703,"results":"13","hashOfConfig":"10"},{"size":1916,"mtime":1609519933791,"results":"14","hashOfConfig":"10"},{"size":855,"mtime":1609418958262,"results":"15","hashOfConfig":"10"},{"size":1915,"mtime":1609520273120,"results":"16","hashOfConfig":"10"},{"size":1212,"mtime":1609502231031,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1m71o0c",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/rekha/workspace/notes-management-app/src/index.js",[],["37","38"],"/home/rekha/workspace/notes-management-app/src/reportWebVitals.js",[],"/home/rekha/workspace/notes-management-app/src/App.js",[],"/home/rekha/workspace/notes-management-app/src/AllNote.js",["39"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Note from './Note';\nimport EditComponent from './EditComponent';\n\nconst AllNote = (props) => {\n    const [filterdata, setFilterdata] = useState([props.notes])\n    const DiffDate = (date) => {\n        const date1 = new Date()\n        const date2 = new Date(date)\n        const diffTime = Math.abs(date2 - date1);\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        return diffDays\n    }\n    useEffect(() => {\n        setFilterdata(props.notes)\n    }, [])\n    const Fitler = (e) => {\n        // let data = []\n        if (e.target.value === 'daily') {\n            const filteredDates = props.notes.filter(d => {\n                return DiffDate(d.id) <= 1\n            });\n            // console.log(filteredDates)\n            setFilterdata(filteredDates)\n        }\n        else if (e.target.value === 'weekly') {\n            const filteredDates = props.notes.filter(d => {\n                return DiffDate(d.id) <= 8\n            });\n            // console.log(filteredDates)\n            setFilterdata(filteredDates)\n        }\n        else if (e.target.value === 'monthly') {\n            const filteredDates = props.notes.filter(d => {\n                return DiffDate(d.id) <= 31\n            });\n            // console.log(filteredDates)\n            setFilterdata(filteredDates)\n        }\n        else if (e.target.value === 'yearly') {\n            const filteredDates = props.notes.filter(d => {\n                return DiffDate(d.id) <= 365\n            });\n            // console.log(filteredDates)\n            setFilterdata(filteredDates)\n\n        }\n    }\n    console.log(filterdata)\n    return (\n        <div className=\"note-container\">\n            <select style={{ padding: \"3px 5px 3px 5px\" }} onChange={Fitler}>\n                <option value='daily'>Daily</option>\n                <option value='weekly'>Weekly</option>\n                <option value='monthly'>Monthly</option>\n                <option value='yearly'>Yearly</option>\n            </select>\n            <h1 className=\"all_note_heading\" style={{ fontWeight: '900' }}>All Notes</h1>\n\n            {props.notes.reverse().map((note) => (\n                <div key={note.id}>\n                    {note.editing ? <EditComponent note={note} key={note.id} /> :\n                        <Note key={note.id} note={note} />}\n                </div>\n            ))}\n        </div>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        notes: state\n    }\n}\n\nexport default connect(mapStateToProps)(AllNote);\n","/home/rekha/workspace/notes-management-app/src/NoteForm.js",[],"/home/rekha/workspace/notes-management-app/src/reducer/noteReducer.js",[],"/home/rekha/workspace/notes-management-app/src/Note.js",[],"/home/rekha/workspace/notes-management-app/src/EditComponent.js",[],["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":17,"column":8,"nodeType":"48","endLine":17,"endColumn":10,"suggestions":"49"},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.notes'. Either include it or remove the dependency array. If 'setFilterdata' needs the current value of 'props.notes', you can also switch to useReducer instead of useState and read 'props.notes' in the reducer.","ArrayExpression",["54"],["52"],["53"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [props.notes]",{"range":"57","text":"58"},[574,576],"[props.notes]"]